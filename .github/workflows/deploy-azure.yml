name: Deploy to Azure

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  ACR_NAME: chat2025
  REGISTRY: chat2025.azurecr.io
  IMAGE_NAME: chatbot-app
  RESOURCE_GROUP: beta-bot
  APP_NAME: grupo-beta
  TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}
          
      - name: Build and push Docker image
        run: |
          echo "Building image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          echo "Pushing images to ACR..."
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Configure App Service
        run: |
          # Solo configuramos WEBSITES_PORT, el resto se gestiona desde el portal de Azure
          az webapp config appsettings set --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.APP_NAME }} --settings WEBSITES_PORT=8000
          
      - name: Restart App Service
        run: |
          echo "Restarting App Service..."
          az webapp restart --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.APP_NAME }}
          
          echo "Waiting for application to restart..."
          sleep 30
          
          echo "Checking application health..."
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.APP_NAME }}.azurewebsites.net/docs)
          echo "Status code: $STATUS_CODE"
          
          echo "Deployment complete. App available at: https://${{ env.APP_NAME }}.azurewebsites.net"
          
      - name: Enable logging
        run: |
          az webapp log config --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.APP_NAME }} --application-logging filesystem --level information --detailed-error-messages true